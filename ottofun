#KNN 
#import sys
#sys.modules[__name__].__dict__.clear()

import numpy as np
import pandas as pd

data=pd.read_csv('train.csv', sep=',')

X=data.ix[:,1:94]
Y=data.ix[:,94]

k = np.arange(1,11)
from sklearn import neighbors

#Creation of the matrix where I store all the test and prediction datas
ntest = 15
matrix=pd.DataFrame()

#For loop that executes all KNN from k = 2 to k = 1024
for i in k:
    # Split data in train and test data
    # A random permutation, to split the data randomly
    np.random.seed(i)
    indices = np.random.permutation(len(Y))
    
    X_train = X.ix[indices[:-20000],:]
    Y_train = Y[indices[:-20000]]
    X_test  = X.ix[indices[-ntest:],:]
    Y_test  = Y[indices[-ntest:]]
    
    #KNN with k from 2 to 1024
    knn = neighbors.KNeighborsClassifier(n_neighbors=2**i)
    
    knn.fit(X_train, Y_train)
    Y_predict = knn.predict(X_test)
    
    matrix.insert(matrix.shape[1],'Y_test_k{}'.format(2**i),np.array(Y_test,dtype=object))       
    matrix.insert(matrix.shape[1],'Y_predict_k{}'.format(2**i),Y_predict)
